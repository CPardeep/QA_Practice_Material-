package com.qa.utils;
import java.util.ArrayList;
import com.qa.vehicles.Vehicle;

public class Garage< T extends Vehicle> {
	
	
	private static Garage<Vehicle> instance = null;
	
	private Garage() {
		
	}
		
	public static Garage<Vehicle> getInstance() {
		if (instance == null) {
			instance = new Garage<Vehicle>();
		}
		return instance;
		
	}

	private ArrayList<T> garage = new ArrayList<T>();
	
	public ArrayList<T> getGarage() {
		return garage;
	}
	
	public void add(T vehicle) {
		garage.add(vehicle);
	}
	
	public void clearGarage() {
		garage.clear();
	}
	
	public void removeVehicleByType(String type) {
		garage.removeIf(Vehicle -> Vehicle.getType().equals(type));
	}
	
	public void removeVehicleById(int id) {
		garage.removeIf(Vehicle -> Vehicle.getId() == id);
	}
	
	public void checkArray() {
		for(T x: garage) {
			System.out.println("ID: "+ x.getId() + ", Brand: " + x.getBrand() + ", Colour: " + x.getColour() + "," + x.toString());
		} 
	}
	
	public ArrayList<T> searchGarage(String type) {
		ArrayList<T> found = new ArrayList<T>();
		for(T vehicle: garage) {
			if(vehicle.getType().equals(type)) {
				found.add(vehicle);
			}
		}
		return found;
	}
	
	public Vehicle searchCar(int id) {
		Vehicle v = null;
		for(T vehicle: garage) {
			if(vehicle.getId() == id) {
				v = vehicle;
			}
		}
		return v;
	}

}
