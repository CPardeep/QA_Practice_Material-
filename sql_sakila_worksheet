Sakila database Exercises

1. Select all Actors from the table.

  SELECT * FROM actor;

2. Find the actor with the first name “John”.

  SELECT * FROM actor WHERE first_name = "JOHN";

3. Find all actors with the surname “Neeson”.

  SELECT * FROM actor WHERE last_name = "NEESON";

4. Find all actors with Id numbers divisible by 10.

  SELECT * FROM actor WHERE actor_id % 10 = 0;

5. What is the description of the movie with ID of 100? */

  SELECT description FROM film WHERE film_id = 100;

6. Find every movie with a rating of “R”.

  SELECT * FROM film WHERE rating = "R";

7. Find every movie except those with a rating of “R”.

  SELECT * FROM film WHERE rating != "R";

8. Find the 10 shortest movies.

  SELECT * FROM film ORDER BY length DESC LIMIT 10;

9. Now return only the movie titles.

  SELECT title FROM film ORDER BY length DESC LIMIT 10;

10. Find all movies with Deleted Scenes.

  SELECT * FROM film WHERE special_features = 'Deleted Scenes';

11. Which last names are not repeated?

  SELECT COUNT(last_name), last_name FROM actor GROUP BY last_name HAVING COUNT(*) <= 1 ;

12. Which last names appear more than once?

  SELECT COUNT(last_name), last_name FROM actor GROUP BY last_name HAVING COUNT(*) > 1 ;

13. Which actor has appeared in the most films?

  SELECT * FROM actor WHERE actor_id = (SELECT actor_id FROM film_actor GROUP BY actor_id ORDER BY count(actor_id) DESC LIMIT 1);

14. Is ‘Academy Dinosaur’ available for rent from Store 1?

  SELECT * FROM inventory WHERE store_id = "1" AND film_id = (SELECT film_id FROM film WHERE title = "Academy Dinosaur");

15. When is ‘Academy Dinosaur’ due?

  SELECT return_date FROM rental WHERE inventory_id in (SELECT inventory_id FROM inventory WHERE store_id = "1" AND film_id = (SELECT film_id FROM film WHERE title = "Academy Dinosaur"));

16. What is that average running time of all the films in the database?

  SELECT avg(length) AS average_length_of_all_films FROM film;

17. What is the average running time of films by category?

    SELECT AVG(film.length), category.name FROM film
    JOIN film_category ON film.film_id = film_category.film_id
    JOIN category ON category.category_id = film_category.category_id
    GROUP BY category.name;

18. How many movies have Robots in them?

  SELECT COUNT(film_id) FROM film WHERE description LIKE "%Robots%";
  SELECT COUNT(film_id) FROM film WHERE description LIKE "%robot%";

19. Find the movie(s) with the longest runtime.

  SELECT title, length FROM film ORDER BY length DESC LIMIT 10;

20. Count how many movies were released in 2010.

  SELECT COUNT(film_id), release_year FROM film WHERE release_year = 2010;

21. Find the titles of all horror movies.

  SELECT film.title, category.name FROM film
  JOIN film_category ON film.film_id = film_category.film_id
  JOIN category ON category.category_id = film_category.category_id
  WHERE category.name = "horror";

22. Return the full name of the staff member – in a column named full_name – with the ID
of 1.

  SELECT CONCAT(first_name, " ", last_name) AS full_name FROM staff WHERE staff_id = 1;

23. Retrieve all movies that Fred Costner has appeared in.

  SELECT film.title FROM actor JOIN film_actor ON

24. Find out which location has the most copies of BUCKET BROTHERHOOD.
25. How many distinct countries are there?
26. What are the names of all the languages in the database (sorted alphabetically)?
27. Return the full names (first and last) of actors with “son” in their last name, ordered by
their first name.
28. Create a list of categories and the number of films for each category.
29. Create a list of actors and the number of movies by each actor.
